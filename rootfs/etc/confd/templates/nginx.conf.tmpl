user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log crit;

events {
    worker_connections 4096;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time status $status';
    access_log off;

    proxy_connect_timeout 60;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    proxy_intercept_errors on;
    proxy_cache off;
    proxy_request_buffering off;
    proxy_buffering off;
    proxy_buffers 16 32k;
    proxy_buffer_size 32k;
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    client_max_body_size 0;
    http2_max_field_size 8k;

    port_in_redirect off;
    send_timeout 600;
    sendfile on;
    keepalive_requests 1000;
    keepalive_timeout 60;
    reset_timedout_connection off;
    server_tokens off;

    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 2;
    gzip_http_version 1.1;
    gzip_min_length 10240;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
    gzip_vary on;
    gzip_proxied any;
    gzip_disable msie6;

    index index.html index.htm;
    server_names_hash_bucket_size 128;
    server_names_hash_max_size 20480;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    map $http_x_forwarded_proto $thescheme {
        default $scheme;
        https https;
    }

{{if ls "/http"}}{{range gets "/http/*"}}{{$domain := base .Key}}{{$data := json .Value}}
    server {
        listen 80;
        {{if $data.ssl}}listen 443 ssl http2;{{end}}
        server_name {{$domain}};

        add_header X-Wodby-Node "{{ getenv "WODBY_NODE_UUID" }}" always;

        {{if $data.no_robots}}
            add_header  X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
        {{end}}

        location /.well-known/acme-challenge {
            root /mnt/containers/edge;
        }

        {{if $data.ssl}}
            #
            # SSL config based on https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1d&guideline=5.6
            #

            ssl_certificate /mnt/containers/edge/certificates/{{$domain}}.crt;
            ssl_certificate_key /mnt/containers/edge/certificates/{{$domain}}.key;
            ssl_session_timeout 1d;
            ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
            ssl_session_tickets off;

            ssl_dhparam /etc/nginx/pki/dhparam.pem;
            ssl_ecdh_curve X25519:prime256v1:secp384r1;

            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
            ssl_prefer_server_ciphers off;

            {{if $data.hsts}}add_header Strict-Transport-Security "max-age=63072000{{if $data.hsts_subdomains}}; includeSubDomains{{end}}" always;{{end}}

            ssl_stapling on;
            ssl_stapling_verify on;

            ssl_trusted_certificate /mnt/containers/edge/certificates/{{$domain}}.crt;
        {{end}}

        location / {
            {{if $data.maintenance}}
                return 503;
            {{end}}

            {{if $data.ssl_required}}
                if ($scheme = http) {
                    return 301 https://$server_name$request_uri;
                }
            {{end}}

            {{if $data.redir_www}}
                return 301 $scheme://{{$data.redir_www}}$request_uri;
            {{else if $data.redir_no_www}}
                return 301 $scheme://{{$data.redir_no_www}}$request_uri;
            {{end}}

            {{if $data.auth}}
                auth_basic "Restricted";
                auth_basic_user_file /mnt/containers/edge/auth/{{$data.auth}}.htpasswd;
            {{end}}

            proxy_pass {{$data.proxy_proto}}://{{$data.proxy_addr}}:{{$data.proxy_port}};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }
{{ end }}{{ end }}

    server {
        listen 80 default_server;
        listen 443 ssl http2 default_server;

        server_name localhost;

        add_header X-Wodby-Node "{{ getenv "WODBY_NODE_UUID" }}" always;
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;

        location /.well-known/acme-challenge {
            root /mnt/containers/edge;
        }

        ssl_certificate /etc/nginx/ssl/default.crt;
        ssl_certificate_key /etc/nginx/ssl/default.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        ssl_dhparam /etc/nginx/pki/dhparam.pem;
        ssl_ecdh_curve X25519:prime256v1:secp384r1;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        ssl_stapling on;
        ssl_stapling_verify on;

        ssl_trusted_certificate /etc/nginx/ssl/default.crt;

        error_page 503 /custom_503.html;
        error_page 500 502 504 /custom_50x.html;

        location / {
            return 503;
        }

        location /backups/ {
            root /usr/share/nginx/html;
            autoindex off;
            error_page 404 /custom_404.html;
        }

        location = /custom_404.html {
            root /usr/share/nginx/html;
            internal;
        }

        location = /custom_503.html {
            root /usr/share/nginx/html;
            internal;
        }

        location = /custom_50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
